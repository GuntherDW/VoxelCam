plugins {
	id 'net.minecraftforge.gradle.tweaker-client' version '2.0.2'
}
archivesBaseName = 'mod_VoxelCam'
version = '1.4.0-mc1.8'
ext.buildnumber = '33'

minecraft {
	version = '1.8'
	runDir = 'run'
    tweakClass = 'com.mumfrey.liteloader.launch.LiteLoaderTweaker'
	mappings = 'snapshot_20151111'
}
processResources {
	def toReplace = [version:project.version, buildnumber:project.buildnumber]
	inputs.properties toReplace
	from (sourceSets.main.resources.srcDirs) {
		include 'litemod.json'
		expand toReplace
	}
	from (sourceSets.main.resources.srcDirs) { exclude 'litemod.json' }
}
repositories.flatDir {dir 'liteloader'}
configurations.compile.transitive=false
dependencies {
    deobfProvided 'com.mumfrey:liteloader:1.8-SNAPSHOT:srgnames'
	provided project('voxellib')
	compile 'org.apache.httpcomponents:httpmime:4.3.3' // for multipart entity
	compile 'oauth.signpost:signpost-core:1.2.1.2'
	compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
}
task litemod(type:Jar, dependsOn: [reobfJar, {project('voxellib').reobfJar}]) {
	extension 'litemod'
	from zipTree(jar.archivePath)
    from {project('voxellib').jar.archivePath}
	from(configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}) {
		exclude 'META-INF/***', 'examples/**'
	}
	exclude 'dummyThing'
}
artifacts.archives litemod
reobf {
	litemod {
		// so launchwrapper will load these classes from the litemod.
		extraLines 'PK: org/apache/http/entity/mime com/thatapplefreak/redist/org/apache/http/entity/mime'
		extraLines 'PK: com/google/gdata com/thatapplefreak/redist/com/google/gdata
		// because why not?
		extraLines 'PK: oauth com/thatapplefreak/redist/oauth'
	}
}